
import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { BarChart3 } from "lucide-react";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';

export default function PerformanceOverview({ attempts }) {
  const getPerformanceData = () => {
    const subjectStats = {};
    
    attempts.forEach(attempt => {
      if (!subjectStats[attempt.subject]) {
        subjectStats[attempt.subject] = {
          name: attempt.subject,
          totalAttempts: 0,
          totalScore: 0,
          avgScore: 0
        };
      }
      
      subjectStats[attempt.subject].totalAttempts++;
      subjectStats[attempt.subject].totalScore += attempt.score;
    });
    
    return Object.values(subjectStats).map(stat => ({
      ...stat,
      avgScore: Math.round(stat.totalScore / stat.totalAttempts)
    })).slice(0, 5);
  };

  const performanceData = getPerformanceData();

  return (
    <Card className="shadow-lg border-0 bg-white/60 backdrop-blur-lg">
      <CardHeader>
        <CardTitle className="text-xl font-bold text-text-primary flex items-center gap-2">
          <BarChart3 className="w-6 h-6 text-primary-blue" />
          Performance Overview
        </CardTitle>
      </CardHeader>
      <CardContent>
        {performanceData.length === 0 ? (
          <div className="text-center py-8 text-text-secondary">
            <BarChart3 className="w-12 h-12 mx-auto mb-3 opacity-30" />
            <p>No quiz data available</p>
            <p className="text-sm">Take some practice tests to see your performance!</p>
          </div>
        ) : (
          <div className="h-64 -ml-4">
            <ResponsiveContainer width="100%" height="100%">
              <BarChart data={performanceData} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>
                <CartesianGrid strokeDasharray="3 3" stroke="#e2e8f0" vertical={false} />
                <XAxis 
                  dataKey="name" 
                  tick={{ fontSize: 12, fill: '#64748b' }}
                  axisLine={false}
                  tickLine={false}
                />
                <YAxis 
                  domain={[0, 100]}
                  tick={{ fontSize: 12, fill: '#64748b' }}
                  axisLine={false}
                  tickLine={false}
                  tickFormatter={(value) => `${value}%`}
                />
                <Bar 
                  dataKey="avgScore" 
                  fill="url(#perfGradient)"
                  radius={[4, 4, 0, 0]}
                  barSize={20}
                />
                <defs>
                  <linearGradient id="perfGradient" x1="0" y1="0" x2="0" y2="1">
                    <stop offset="5%" stopColor="#0d9488" stopOpacity={0.8}/>
                    <stop offset="95%" stopColor="#0d9488" stopOpacity={0.4}/>
                  </linearGradient>
                </defs>
              </BarChart>
            </ResponsiveContainer>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
